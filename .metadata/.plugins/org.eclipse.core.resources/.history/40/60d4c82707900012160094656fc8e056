<<<<<<< HEAD:.metadata/.plugins/org.eclipse.core.resources/.history/40/60d4c82707900012160094656fc8e056
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.FlowLayout;
import java.awt.*;
import javax.swing.*;


public class FanoronaGame extends JPanel {
    
    public class AL extends KeyAdapter {
        public void keyPessed(KeyEvent e) {
            int keyCode = e.getKeyCode();
            
        }
        public void keyReleased(KeyEvent e) {
            
        }
    }
    


    public FanoronaGame() { //create the window
        super(new BorderLayout(3,3));
        JPanel board = new Panel());
        board.setPreferredScrollableViewportSize(new Dimension(900,500));
        board.setFillsViewportHeight(true);
        JButton startButton = new JButton("Start Game");
        JPanel buttonCenter = new JPanel( new FlowLayout(FlowLayout.CENTER) );
        buttonCenter.add(startButton);
        add(buttonCenter, BorderLayout.SOUTH);
    }

    public static void createGUI() {
        JFrame frame = new JFrame("Fanorona Game");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        FanoronaGame newGame = new FanoronaGame();
        frame.setContentPane(newGame);
        frame.pack();
        frame.setVisible(true);
    }

     public void paint(Graphics g) { //paint graphics to screen
         g.setColor(Color.red);
         g.drawString("Fanorona Game", 400, 250);
         g.setColor(Color.blue);
         g.drawString("Created by: Megan Kerins, Matt Hacker, and Patrick Casey", 300, 280);
         //g.clearRect(0, 0, getHeight(), getWidth() );
         //g.mainMenu();
     }
     
    

     
     class Panels extends JPanel {

     private JPanel intro, game;
     private JButton startgame,newgame; 

     public Panels()
     {
         createPanel();
         addPanel();
     }

     private void createPanel()
     {
         intro = new JPanel();
         startgame = new JButton("Start Game");
         startgame.addActionListener(new addButtonListener());

         game = new JPanel();
         newgame = new JButton("New Game");

     }

     private void addPanel()
     {
         intro.add(startgame);
         game.add(newgame);

         add(intro);

     }

     class addButtonListener implements ActionListener
     {
         public void actionPerformed(ActionEvent ae) 
         {
             getRootPane().getContentPane().removeAll();
             add(game);

             repaint();
         }
     }
     }

//    class ButtonAction {
//    	  public ButtonAction() {
//    	    JFrame frame = new JFrame("Fanorona Game");
//    	    frame.setSize(900, 500);
//    	    frame.setResizable(false);
//    	    frame.setVisible(true);
//    	    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//    	    JButton button = new JButton("Start New Game");
//
//    	    ActionListener actionListener = new ActionListener(){
//    	      public void actionPerformed(ActionEvent actionEvent) {
//    	    	  Panels game = new Panels();
//    	    	  game.add(game);
//    	      
//    	    }
//    
  /*  public void newPaint(Graphics g) { //After I figure out how to make the Initial display go away..
        g.clearRect(0, 0, 900, 500 );
        g.setColor(Color.black);
        g.drawRect(100, 800, 300, 500);
        g.setColor(Color.black);
        g.drawLine(100, 800, 300, 500);
    }
    
    public void mainMenu(){
        JFrame menu = new JFrame();
        JButton start = new JButton("New Game");
       }
    
    
    public static void main(String[] args) {
     new FanoronaGame();
     FanoronaGame.Panels.addButtonListener intro = null;
	intro.addButtonListener();
    }*/
    	
	public static void main(String args[])
	{
		FanoronaGame.createGUI();
=======
import javax.swing.*; 
import java.awt.*; 
import java.awt.event.*; 
import java.io.*; 
import java.util.*; 

public class FanoronaGame implements ActionListener {
	JFrame window = new JFrame("Fanorona Game");

	// Game Menu variables
	JMenuBar mainMenu = new JMenuBar();
	JMenuItem newGame = new JMenuItem("New Game"), 
				about = new JMenuItem("About"),
				instructions = new JMenuItem("Instructions"),
				exit = new JMenuItem("Exit");
	//New Game buttons
	Object[] options = {"Easy",
						"Medium",
						"Hard"};

	// Buttons for Menus
	JButton pve = new JButton("Player vs CPU"),
			back = new JButton("exit");
	JButton buttonArray[] = new JButton[45];

	// Panels for Graphic interface
	JPanel	newGamePanel = new JPanel(),
			northPanel = new JPanel(),
			southPanel = new JPanel(),
			topPanel = new JPanel(),
			bottomPanel = new JPanel(),
			playingFieldPanel = new JPanel();

	JLabel gameTitle = new JLabel("Fanorona");
	JTextArea text = new JTextArea();

	// set window size and default color
	final int windowX = 900, windowY = 500, color = 190; 

	public FanoronaGame() {
		// Game window formatting
		window.setSize(windowX, windowY);
		window.setLocation(400, 400);
		window.setResizable(false);
		window.setLayout(new BorderLayout());
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		//Panel properties
		newGamePanel.setLayout(new GridLayout(2, 1, 2, 10));
		northPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		southPanel.setLayout( new FlowLayout(FlowLayout.CENTER));
		topPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		bottomPanel.setLayout(new FlowLayout(FlowLayout.CENTER));

		northPanel.setBackground(new Color(color-20, color-20, color-20));
		southPanel.setBackground(new Color(color, color, color));
		bottomPanel.setBackground(new Color(color, color, color));
		topPanel.setBackground(new Color(color, color, color));

		// Create Menu Bars
		mainMenu.add(newGame);
		mainMenu.add(about);
		mainMenu.add(instructions);
		mainMenu.add(exit);

		newGamePanel.add(pve);

		// Add action listeners
		newGame.addActionListener(this);
		exit.addActionListener(this);
		instructions.addActionListener(this);
		about.addActionListener(this);
		back.addActionListener(this);
		pve.addActionListener(this);

		//Game board setup
		playingFieldPanel.setLayout(new GridLayout(5, 9, 2, 2));
		playingFieldPanel.setBackground(Color.black);
		for (int i = 0; i < 45; i++) {
			buttonArray[i] = new JButton();
			buttonArray[i].setBackground(new Color(220, 220, 220));
			buttonArray[i].addActionListener(this);
			playingFieldPanel.add(buttonArray[i]);
		}

		northPanel.add(mainMenu);
		southPanel.add(gameTitle);

		window.add(northPanel, BorderLayout.NORTH);
		window.add(southPanel, BorderLayout.CENTER);
		window.setVisible(true);
>>>>>>> new game features:FanoronaGame/src/FanoronaGame.java
	}

	public void actionPerformed(ActionEvent click) {
		Object actionSource = click.getSource();
		if (actionSource == newGame) {
			int option = askMessage("Are you prepared to start a new game vs CPU?" +
				" WARNING: All current progress will be lost.\n", 
				"Quit Game?", JOptionPane.YES_NO_OPTION);
			if(option == JOptionPane.YES_OPTION) {
				int playOption = JOptionPane.showOptionDialog(newGamePanel, "Select your difficulty", "Difficulty Level",
				JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[2]);
				if(playOption == JOptionPane.OK_OPTION){
					window.add(playingFieldPanel, BorderLayout.CENTER);
					window.setVisible(true);
				}
				else if(playOption == JOptionPane.NO_OPTION){
					window.add(playingFieldPanel, BorderLayout.CENTER);
					window.setVisible(true);
				}
				else if(playOption == JOptionPane.CANCEL_OPTION){
					window.add(playingFieldPanel, BorderLayout.CENTER);
					window.setVisible(true);
				}
				
			}
		}
		else if (actionSource == exit) {
			int option = askMessage("Are you sure you want to exit?", "Exit Game", JOptionPane.YES_NO_OPTION); 
			if(option == JOptionPane.YES_OPTION) 
				System.exit(0);
		}
		else if (actionSource == about) {
			JOptionPane.showMessageDialog(null, "This Game was created by Megan Kernis, Patrick Casey, and Matt Hacker.\n" +
					"Current Version: 0.1\n" +
					"Team 04, CSCE 315-501\n",
					"About", JOptionPane.ERROR_MESSAGE);
		}
		else if (actionSource == instructions) {
			JOptionPane.showMessageDialog(null, "Move your piece toward or way from an enemy piece to capture it.\n" +
					"You may only move a piece that will cause the capture of an enemy piece.\n" +
					"The Game will continue as long as there are valid move to be made.\n" +
					"More instructions to follow...", "Instructions", JOptionPane.ERROR_MESSAGE);
		}
	}

	public int askMessage(String message, String title, int option) { 
		return JOptionPane.showConfirmDialog(null, message, title, option); 
	} 

	public static void main(String[] args) {
		 new FanoronaGame();
	}
}
